int glob = 5;

struct point
{
    double x;
    double y;
	double len() 
	{
		return sqrt(this->x * this->x + this->y * this->y);
	}
	point norm() 
	{
		point res;
		double l = this.len();
		res.x = this.x / l;
		res.y = this.y / l;
		return res;
	}
	point rev () 
	{
		point res;
		res.x = -this->x;
		res.y = -this->y;
		return res;
	}
};

int main() 
{
	mstr ms = "example";
	/*echo fibRecursive(8);*/
	point p1;
    p1.x = (double)1;
	p1.y = 1.0;
	point p2 = p1.norm();
	echo p2.x;
	echo p2.y;
	return 0;
}



int fibRecursive(int n) {
	if (n == 1 || n == 2) {
		return 1;
	}
	else {
		return fibRecursive(n - 1) + fibRecursive(n - 2);
	}
}

int primes(int n) 
{
	
	for (int i = 2; i <= n; i = i + 1) 
	{	
		int isPrime = 1;
		for (int j = 2; j * j <= i; j = j + 1) 
		{
			if (i % j == 0) {
				isPrime = 0;
			}
		}
		if (isPrime) echo i;
	}
}

int fact (int n) 
{
	int res = 1;
	for (int i = 1; i <= n; i = i + 1) 
	{
		res = res * i;
	}
	return res;
}

int max(int a, int b) {
	if (a > b) return a;
	else return b;
}